FROM ubuntu:22.04

ARG TARGETPLATFORM
ARG BUILDPLATFORM

LABEL maintainer="ChatBoxAI Team"
LABEL description="Multi-architecture ChatBoxAI with Wayland support"

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y \
    wget \
    curl \
    ca-certificates \
    gnupg \
    lsb-release \
    software-properties-common \
    libwayland-client0 \
    libwayland-cursor0 \
    libwayland-egl1-mesa \
    libwayland-server0 \
    libxkbcommon0 \
    libgdk-pixbuf2.0-0 \
    libgtk-3-0 \
    libglib2.0-0 \
    libasound2 \
    libpulse0 \
    libdbus-1-3 \
    libdrm2 \
    libgl1-mesa-glx \
    libxss1 \
    libgconf-2-4 \
    libxtst6 \
    libxrandr2 \
    libasound2 \
    libpangocairo-1.0-0 \
    libatk1.0-0 \
    libcairo-gobject2 \
    libgtk-3-0 \
    libgdk-pixbuf2.0-0 \
    && rm -rf /var/lib/apt/lists/*

RUN groupadd -r chatboxai && useradd -r -g chatboxai -u 1001 chatboxai

# Install Node.js for MCP servers
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs

WORKDIR /opt/chatboxai

COPY --chown=chatboxai:chatboxai chatboxai-* ./
COPY --chown=chatboxai:chatboxai mcp-config.json ./
COPY --chown=chatboxai:chatboxai start-mcp.sh ./
COPY --chown=chatboxai:chatboxai entrypoint.sh ./

RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
        mv chatboxai-x86_64 chatboxai; \
    elif [ "$TARGETPLATFORM" = "linux/arm64" ]; then \
        mv chatboxai-arm64 chatboxai; \
    fi && \
    chmod +x chatboxai start-mcp.sh entrypoint.sh

ENV WAYLAND_DISPLAY=wayland-0
ENV XDG_RUNTIME_DIR=/tmp
ENV GDK_BACKEND=wayland
ENV QT_QPA_PLATFORM=wayland

USER chatboxai

EXPOSE 3000

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

CMD ["./entrypoint.sh"]